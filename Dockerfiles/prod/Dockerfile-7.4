# Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-prod.j2 instead.
FROM grengojbo/php-fpm:7.4-mods
MAINTAINER "Oleg Dolya" <oleg.dolya@gmail.com>


###
### Labels
###
# https://github.com/opencontainers/image-spec/blob/master/annotations.md
#LABEL "org.opencontainers.image.created"=""
#LABEL "org.opencontainers.image.version"=""
#LABEL "org.opencontainers.image.revision"=""
LABEL "maintainer"="Oleg Dolya <oleg.dolya@gmail.com>"
LABEL "org.opencontainers.image.authors"="Oleg Dolya <oleg.dolya@gmail.com>"
LABEL "org.opencontainers.image.url"="https://github.com/grengojbo/docker-php-fpm"
LABEL "org.opencontainers.image.documentation"="https://github.com/grengojbo/docker-php-fpm"
LABEL "org.opencontainers.image.source"="https://github.com/grengojbo/docker-php-fpm"
LABEL "org.opencontainers.image.vendor"="grengojbo"
LABEL "org.opencontainers.image.licenses"="MIT"
LABEL "org.opencontainers.image.ref.name"="7.4-prod"
LABEL "org.opencontainers.image.title"="PHP-FPM 7.4-prod"
LABEL "org.opencontainers.image.description"="PHP-FPM 7.4-prod"

RUN mkdir -p /app
WORKDIR /app

###
### Install
###
RUN set -eux \
	&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \
	#locales-all \
	locales \
	socat \
	jq \
	iputils-ping \
	imagemagick \
	&& echo "------------------- locale gen -------------------" \
	&& locale-gen en_US.UTF-8 \
	&& locale-gen uk_UA.UTF-8 \
	&&locale-gen ru_RU.UTF-8 \
	&& echo "-------------------- composer --------------------" \
	&& curl -sS -L --fail https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
	\
	&& DEBIAN_FRONTEND=noninteractive apt-get purge -qq -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false apt-utils \
	&& apt-get autoclean -y && apt-get clean -y \
	&& rm -fr /tmp/* /var/tmp/* \
	&& rm -rf /var/lib/apt/lists/* \
	\
	&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \
	&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \
	&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)


###
### Verify
###
RUN set -eux \
	&& echo "date.timezone=UTC" > /usr/local/etc/php/php.ini \
	&& php -v | grep -oE 'PHP\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^7.4' \
	&& /usr/local/sbin/php-fpm --test \
	\
	&& PHP_ERROR="$( php -v 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_ERROR}" ]; then echo "${PHP_ERROR}"; false; fi \
	&& PHP_ERROR="$( php -i 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_ERROR}" ]; then echo "${PHP_ERROR}"; false; fi \
	\
	&& PHP_FPM_ERROR="$( php-fpm -v 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_FPM_ERROR}" ]; then echo "${PHP_FPM_ERROR}"; false; fi \
	&& PHP_FPM_ERROR="$( php-fpm -i 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_FPM_ERROR}" ]; then echo "${PHP_FPM_ERROR}"; false; fi \
	&& rm -f /usr/local/etc/php/php.ini

COPY ./data/install-gosu.sh /usr/local/bin/install-gosu.sh
RUN chmod 0777 /usr/local/bin/install-gosu.sh \
	&& /usr/local/bin/install-gosu.sh

###
### Copy files
###
COPY ./data/docker-entrypoint.sh /docker-entrypoint.sh
COPY ./data/docker-entrypoint.d/*.sh /docker-entrypoint.d/
# COPY ./data/postfix.sh /usr/local/sbin/postfix.sh
# COPY ./data/supervisord.conf /etc/supervisor/supervisord.conf


###
### Volumes
###
VOLUME /var/log/php
# VOLUME /var/mail

# ENV LC_ALL=en_US.UTF-8
# ENV LC_ALL=C
# ENV LANG=en_US.UTF-8
# ENV LANGUAGE=en_US.UTF-8
ENV COMPOSER_MEMORY_LIMIT=-1

###
### Ports
###
EXPOSE 9000

RUN chown -R ${MY_USER}:${MY_GROUP} /app

###
### Entrypoint
###
# CMD [ "php-fpm", "-F", "--pid", "/opt/bitnami/php/tmp/php-fpm.pid", "-y", "/opt/bitnami/php/etc/php-fpm.conf" ]
CMD ["/usr/local/sbin/php-fpm"]
ENTRYPOINT ["/docker-entrypoint.sh"]
